const express = require('express');
const mysql = require('mysql2');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

app.use(bodyParser.json());

const db = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'password',
    database: 'escola'
});

db.connect(err => {
    if (err) {
        console.error('Erro ao conectar ao banco de dados:', err);
        return;
    }
    console.log('Conectado ao banco de dados');
});

// Criar um novo professor
app.post('/professores', (req, res) => {
    const { nome_completo, email, telefone } = req.body;
    const sql = 'INSERT INTO Professor (nome_completo, email, telefone) VALUES (?, ?, ?)';
    db.query(sql, [nome_completo, email, telefone], (err, result) => {
        if (err) {
            res.status(500).send(err);
            return;
        }
        res.status(201).send({ id: result.insertId, nome_completo, email, telefone });
    });
});

// Obter todos os professores
app.get('/professores', (req, res) => {
    const sql = 'SELECT * FROM Professor';
    db.query(sql, (err, results) => {
        if (err) {
            res.status(500).send(err);
            return;
        }
        res.send(results);
    });
});

// Obter um professor por ID
app.get('/professores/:id', (req, res) => {
    const { id } = req.params;
    const sql = 'SELECT * FROM Professor WHERE id_professor = ?';
    db.query(sql, [id], (err, results) => {
        if (err) {
            res.status(500).send(err);
            return;
        }
        if (results.length === 0) {
            res.status(404).send({ message: 'Professor nÃ£o encontrado' });
            return;
        }
        res.send(results[0]);
    });
});

// Atualizar um professor
app.put('/professores/:id', (req, res) => {
    const { id } = req.params;
    const { nome_completo, email, telefone } = req.body;
    const sql = 'UPDATE Professor SET nome_completo = ?, email = ?, telefone = ? WHERE id_professor = ?';
    db.query(sql, [nome_completo, email, telefone, id], (err, result) => {
        if (err) {
            res.status(500).send(err);
            return;
        }
        res.send({ message: 'Professor atualizado com sucesso' });
    });
});

// Deletar um professor
app.delete('/professores/:id', (req, res) => {
    const { id } = req.params;
    const sql = 'DELETE FROM Professor WHERE id_professor = ?';
    db.query(sql, [id], (err, result) => {
        if (err) {
            res.status(500).send(err);
            return;
        }
        res.send({ message: 'Professor deletado com sucesso' });
    });
});

app.listen(port, () => {
    console.log(`Servidor rodando na porta ${port}`);
});
