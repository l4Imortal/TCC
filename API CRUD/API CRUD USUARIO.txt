const express = require('express');
const mysql = require('mysql2');
const bodyParser = require('body-parser');

const app = express();
const port = 3000;

app.use(bodyParser.json());

const db = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'password',
    database: 'escola'
});

db.connect(err => {
    if (err) {
        console.error('Erro ao conectar ao banco de dados:', err);
        return;
    }
    console.log('Conectado ao banco de dados');
});

// Criar um novo usuário
app.post('/usuarios', (req, res) => {
    const { login, senha, nivel_acesso, id_professor } = req.body;
    const sql = 'INSERT INTO Usuario (login, senha, nivel_acesso, id_professor) VALUES (?, ?, ?, ?)';
    db.query(sql, [login, senha, nivel_acesso, id_professor], (err, result) => {
        if (err) {
            res.status(500).send(err);
            return;
        }
        res.status(201).send({ id: result.insertId, login, senha, nivel_acesso, id_professor });
    });
});

// Obter todos os usuários
app.get('/usuarios', (req, res) => {
    const sql = 'SELECT * FROM Usuario';
    db.query(sql, (err, results) => {
        if (err) {
            res.status(500).send(err);
            return;
        }
        res.send(results);
    });
});

// Obter um usuário por ID
app.get('/usuarios/:id', (req, res) => {
    const { id } = req.params;
    const sql = 'SELECT * FROM Usuario WHERE id_usuario = ?';
    db.query(sql, [id], (err, results) => {
        if (err) {
            res.status(500).send(err);
            return;
        }
        if (results.length === 0) {
            res.status(404).send({ message: 'Usuário não encontrado' });
            return;
        }
        res.send(results[0]);
    });
});

// Atualizar um usuário
app.put('/usuarios/:id', (req, res) => {
    const { id } = req.params;
    const { login, senha, nivel_acesso, id_professor } = req.body;
    const sql = 'UPDATE Usuario SET login = ?, senha = ?, nivel_acesso = ?, id_professor = ? WHERE id_usuario = ?';
    db.query(sql, [login, senha, nivel_acesso, id_professor, id], (err, result) => {
        if (err) {
            res.status(500).send(err);
            return;
        }
        res.send({ message: 'Usuário atualizado com sucesso' });
    });
});

// Deletar um usuário
app.delete('/usuarios/:id', (req, res) => {
    const { id } = req.params;
    const sql = 'DELETE FROM Usuario WHERE id_usuario = ?';
    db.query(sql, [id], (err, result) => {
        if (err) {
            res.status(500).send(err);
            return;
        }
        res.send({ message: 'Usuário deletado com sucesso' });
    });
});

app.listen(port, () => {
    console.log(`Servidor rodando na porta ${port}`);
});
